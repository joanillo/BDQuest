versions funcionals segons metodologia SCRUM
Trello: https://trello.com/b/9fbqTkyD/bdquest

V1
===========
-càrrega de la bd v1
-càrrega de la bd municipis
-càrrega de la bd sakila

Aplicació web:
-primer exemple, base de dades municipis: "select * from provincies"
-es mostra la pregunta a contestar
-formulari bàsic: input per posar la resposta; botó enviar
-es mostra el resultat, el resultat correcte (si no era correcte), i la puntuació
-gestió dels errors
-credencials per la bd: bdquest/keiL2lai
-bd_questio mínim sobre la bd municipis (2 exemples)
-bd_questio mínim sobre la bd sakila (2 exemples)

V2
============
-càrrega de la bd v2
-mostra de preguntes sobre la bd municipis
-mostra de preguntes sobre la bd municipis
-mostra d'usuaris: 1 admin, 1 professor, dos alumnes
-ja podem fer qüetionaris (encara no s'avalua)
-podem canviar de qüestionari
-qüestionaris amb preguntes aleatòries (camp quest.random)

V3
=============
-càrrega de la bd v3
-només treballem amb el primer alumne
-avaluem els qüestionaris: update quest_usuari, quest_detall_usuari
-de moment un quest només es pot fer una vegada, per un usuari
-deshabilitar el botó Envia quan calgui
-quan el resultat d'una select no retorna res, posar '0 records'
-botó 'Test' (per veure el resultat de la select i que no toqui la bd)

v4 (ve de v3)
=============
-càrrega de la bd v4
-login contra google account (domini jaumebalmes.net) (OAuth2 amb PHP)
-identifico el mail, id_usuari, nom, cognoms, curs
-fins que no està identificat l'usuari no podem fer res.
-TODO: si un usuari es loga i no està a la base de dades no funciona (com és lògic, però s'ha d'avisar)
-TODO: acabar

v5 (ve de v3)
=============
-càrrega de la bd v5
-login contra google account (domini jaumebalmes.net) (OAuth2 amb Javascript)
-identifico el mail, id_usuari, nom, cognoms, curs
-fins que no està identificat l'usuari no podem fer res.
-TODO: si un usuari es loga i no està a la base de dades no funciona (com és lògic, però s'ha d'avisar)
-a la bd, canviem quest_detall.num per quest_detall.num_pregunta
-si estic fent un qüestionari, un error de sintaxi també compta com a malament. Per practicar hi ha el botó Test.
-SQL: guardo a la bd les respostes dels alumnes. Així es podrà fer un informe de les respostes dels alumnes i de les solucions correctes.

v6
=============
-càrrega de la bd v6
-incorporació de sentències DML (insert, update, delete) (fins ara només hem fet sentències select)
-per fer-ho creem la taula bd_questio_comprovacio, i el camp bd_questio.rollback
-amb la taula bd_questio_comprovacio puc saber les sentències que s'han d'executar per comprovar si el que ha fet l'alumne és correcte
-processar_rollback.php i processar_test_rollback.php
-possibilitat d'executar i processar vàries comandes DML separades per ; (nedessari per fer transaccions)
-treiem onclick, onload de index.html
-function processar(bd, solucio, sql_alumne) -> processar() (no cal arguments)
-les comandes poden acabar o no amb ;
-mode_developer = 1 | 0

v7
=============
-càrrega de la bd v7 (hi ha les dades que simulen que s'han fet qüestionaris)
-Quan un usuari acaba el qüestionari, pot veure l'informe (i se'l pot descarregar amb pdf)
-canvis diversos

v8
=============
-càrrega de la bd v8
-taula usuari -> alumne
-creem la taula professor (distingim entre professor i alumne)
-en el codi js i php, usuari->alumne
-Els usuaris només veuen els quests del seu curs (del seu professor)
-ja podem fer informes (només visibles per als professors)
-estat d'un qüestionari: actiu (1-true, 0-false)
-.gitignore
-que jquintana@jaumebalmes.net pugui actuar amb rol d'alumne o de professor. Per fer-ho, afegim el camp alumne.actiiu a la bd, per activar/desactivar els alumnes (i concretament, activar/desactivar el rol d'alumne, que aleshores fa de professor).

Desplegament a OVH
===================
-crear i carregar la bd bdquest
-crear i carregar les altres bd: municipis, sakila, langtrainer
-Google OAuth2 que apunti a OVH: llegir_oauth_google.js
-hem de posar el client_id a index.html i professor.html



bdquest.joanillo.org
--------------------
cd ~/projectes/BDQuest/web/v8
ssh ubuntu@vps-f5d83567.vps.ovh.net -f 'sudo chmod -R 777 /var/www/BDQuest/web'
scp -r * ubuntu@vps-f5d83567.vps.ovh.net:/var/www/BDQuest/web
ssh ubuntu@vps-f5d83567.vps.ovh.net -f 'sudo chmod -R 755 /var/www/BDQuest/web'

TODO:
mysql remot a ovh

http://wiki.joanillo.org/index.php/Migraci%C3%B3_del_servidor_joanillo.org_a_OVH_Cloud_(n%C3%BAvol)#Desplegament_dels_projectes_a_OVH
